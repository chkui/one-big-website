webpackJsonp([30],{303:function(s,a,n){"use strict";Object.defineProperty(a,"__esModule",{value:!0});a.content='<p>在<a title="Hazelcast 入门及使用案例" href="https://www.chkui.com/article/hazelcast/hazelcast_get_started_and_code_sample">\n\t入门及使用案例一文</a>介绍了什么是<em>Hazelcast</em>，并展示了一个简单的使用例子。原理大家都懂了，后面的篇章会给兄弟们更多干货。\n</p>\n<p>本篇博文将细说如何配置<em>Hazelcast</em>，听我慢慢给你们侃。</p>\n<h2 id="h2-1">XML基本配置</h2>\n<p>\n    如果用户没有指定或提供任何配置文件，<em>Hazelcast</em>默认会使用jar包中自带的配置文件——"<em>hazelcast-default.xml</em>"来配置<em>Hazelcast</em>的运行环境。<em>Hazelcast</em>默认采用XML格式作为配置文件，当然也支持其他配置方法，后文会详细说明。我们先看看下面这个简单的配置文件例子。\n</p>\n<pre class="xml"><code class="language-xml"><span class="code-tag"><span class="code-tag">&lt;</span><span\n        class="code-name"><span class="code-tag"><span class="code-name">hazelcast</span></span></span><span\n        class="code-tag"> </span><span class="hljs-attr"><span class="code-tag"><span class="hljs-attr">xsi:schemaLocation</span></span></span><span\n        class="code-tag">=</span><span class="code-string"><span class="code-tag"><span class="code-string">"//"</span></span></span><span\n        class="code-tag"> </span><span class="hljs-attr"><span class="code-tag"><span\n        class="hljs-attr">xmlns</span></span></span><span class="code-tag">=</span><span class="code-string"><span\n        class="code-tag"><span class="code-string">"//"</span></span></span><span class="code-tag"> </span><span\n        class="hljs-attr"><span class="code-tag"><span class="hljs-attr">xmlns:xsi</span></span></span><span\n        class="code-tag">=</span><span class="code-string"><span class="code-tag"><span\n        class="code-string">""</span></span></span><span class="code-tag">&gt;</span></span>\n    <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">group</span></span></span><span class="code-tag">&gt;</span></span>\n        <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">name</span></span></span><span class="code-tag">&gt;</span></span>dev<span\n            class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">name</span></span></span><span class="code-tag">&gt;</span></span>\n        <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">password</span></span></span><span class="code-tag">&gt;</span></span>dev-pass<span\n            class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">password</span></span></span><span class="code-tag">&gt;</span></span>\n    <span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">group</span></span></span><span class="code-tag">&gt;</span></span>\n    <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">management-center</span></span></span><span class="code-tag"> </span><span\n            class="hljs-attr"><span class="code-tag"><span class="hljs-attr">enabled</span></span></span><span\n            class="code-tag">=</span><span class="code-string"><span class="code-tag"><span\n            class="code-string">"false"</span></span></span><span class="code-tag">&gt;</span></span>http://localhost:8080/mancenter<span\n            class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">management-center</span></span></span><span class="code-tag">&gt;</span></span>\n    <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">network</span></span></span><span class="code-tag">&gt;</span></span>\n\t\t<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">port</span></span></span><span class="code-tag"> </span><span class="hljs-attr"><span\n                class="code-tag"><span class="hljs-attr">auto-increment</span></span></span><span\n                class="code-tag">=</span><span class="code-string"><span class="code-tag"><span class="code-string">"true"</span></span></span><span\n                class="code-tag"> </span><span class="hljs-attr"><span class="code-tag"><span class="hljs-attr">port-count</span></span></span><span\n                class="code-tag">=</span><span class="code-string"><span class="code-tag"><span class="code-string">"110"</span></span></span><span\n                class="code-tag">&gt;</span></span>7701<span class="code-tag"><span class="code-tag">&lt;/</span><span\n            class="code-name"><span class="code-tag"><span class="code-name">port</span></span></span><span\n            class="code-tag">&gt;</span></span>\n\t\t<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">outbound-ports</span></span></span><span class="code-tag">&gt;</span></span>\n\t\t\t<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span\n                    class="code-tag"><span class="code-name">ports</span></span></span><span\n                    class="code-tag">&gt;</span></span>0<span class="code-tag"><span class="code-tag">&lt;/</span><span\n            class="code-name"><span class="code-tag"><span class="code-name">ports</span></span></span><span\n            class="code-tag">&gt;</span></span>\n\t\t<span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">outbound-ports</span></span></span><span class="code-tag">&gt;</span></span>\n        <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">join</span></span></span><span class="code-tag">&gt;</span></span>\n            <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span\n                    class="code-tag"><span class="code-name">multicast</span></span></span><span\n                    class="code-tag"> </span><span class="hljs-attr"><span class="code-tag"><span class="hljs-attr">enabled</span></span></span><span\n                    class="code-tag">=</span><span class="code-string"><span class="code-tag"><span class="code-string">"true"</span></span></span><span\n                    class="code-tag">&gt;</span></span>\n                <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                        class="code-name">multicast-group</span></span></span><span class="code-tag">&gt;</span></span>224.2.2.3<span\n            class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">multicast-group</span></span></span><span class="code-tag">&gt;</span></span>\n                <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                        class="code-name">multicast-port</span></span></span><span class="code-tag">&gt;</span></span>54327<span\n            class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">multicast-port</span></span></span><span class="code-tag">&gt;</span></span>\n            <span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span\n                    class="code-tag"><span class="code-name">multicast</span></span></span><span\n                    class="code-tag">&gt;</span></span>\n            <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span\n                    class="code-tag"><span class="code-name">tcp-ip</span></span></span><span\n                    class="code-tag"> </span><span class="hljs-attr"><span class="code-tag"><span class="hljs-attr">enabled</span></span></span><span\n                    class="code-tag">=</span><span class="code-string"><span class="code-tag"><span class="code-string">"false"</span></span></span><span\n                    class="code-tag">&gt;</span></span>\n                <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                        class="code-name">interface</span></span></span><span class="code-tag">&gt;</span></span>127.0.0.1<span\n            class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">interface</span></span></span><span class="code-tag">&gt;</span></span>\n                <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                        class="code-name">member-list</span></span></span><span class="code-tag">&gt;</span></span>\n                    <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span\n                            class="code-tag"><span class="code-name">member</span></span></span><span class="code-tag">&gt;</span></span>127.0.0.1<span\n            class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">member</span></span></span><span class="code-tag">&gt;</span></span>\n                <span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span\n                        class="code-tag"><span class="code-name">member-list</span></span></span><span class="code-tag">&gt;</span></span>\n            <span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span\n                    class="code-tag"><span class="code-name">tcp-ip</span></span></span><span\n                    class="code-tag">&gt;</span></span>\n        <span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">join</span></span></span><span class="code-tag">&gt;</span></span>\n\t<span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">network</span></span></span><span class="code-tag">&gt;</span></span>\n\t<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">map</span></span></span><span class="code-tag"> </span><span class="hljs-attr"><span\n            class="code-tag"><span class="hljs-attr">name</span></span></span><span class="code-tag">=</span><span\n            class="code-string"><span class="code-tag"><span class="code-string">"demo.config"</span></span></span><span\n            class="code-tag">&gt;</span></span>\n\t\t<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">backup-count</span></span></span><span class="code-tag">&gt;</span></span>1<span\n            class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">backup-count</span></span></span><span class="code-tag">&gt;</span></span>\n\t\t<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">time-to-live-seconds</span></span></span><span\n                class="code-tag">&gt;</span></span>0<span class="code-tag"><span class="code-tag">&lt;/</span><span\n            class="code-name"><span class="code-tag"><span\n            class="code-name">time-to-live-seconds</span></span></span><span class="code-tag">&gt;</span></span>\n\t\t<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">max-idle-seconds</span></span></span><span class="code-tag">&gt;</span></span>0<span\n            class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">max-idle-seconds</span></span></span><span class="code-tag">&gt;</span></span>\n\t\t<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">eviction-policy</span></span></span><span class="code-tag">&gt;</span></span>NONE<span\n            class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">eviction-policy</span></span></span><span class="code-tag">&gt;</span></span>\n\t\t<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">max-size</span></span></span><span class="code-tag"> </span><span\n                class="hljs-attr"><span class="code-tag"><span class="hljs-attr">policy</span></span></span><span\n                class="code-tag">=</span><span class="code-string"><span class="code-tag"><span class="code-string">"PER_NODE"</span></span></span><span\n                class="code-tag">&gt;</span></span>0<span class="code-tag"><span class="code-tag">&lt;/</span><span\n            class="code-name"><span class="code-tag"><span class="code-name">max-size</span></span></span><span\n            class="code-tag">&gt;</span></span>\n\t\t<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">eviction-percentage</span></span></span><span\n                class="code-tag">&gt;</span></span>25<span class="code-tag"><span class="code-tag">&lt;/</span><span\n            class="code-name"><span class="code-tag"><span\n            class="code-name">eviction-percentage</span></span></span><span class="code-tag">&gt;</span></span>\n\t\t<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">merge-policy</span></span></span><span class="code-tag">&gt;</span></span>com.hazelcast.map.merge.LatestUpdateMapMergePolicy\n\t\t<span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">merge-policy</span></span></span><span class="code-tag">&gt;</span></span>\n\t<span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">map</span></span></span><span class="code-tag">&gt;</span></span>\n<span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n        class="code-name">hazelcast</span></span></span><span class="code-tag">&gt;</span></span></code></pre>\n<p>如果你看到上面的配置内容有点蒙圈，建议你先看看上一篇<a title="Hazelcast 入门及使用案例"\n                                href="https://www.chkui.com/article/hazelcast/hazelcast_get_started_and_code_sample"\n>Hazelcast基础介绍的文章</a>。</p>\n<p>前面已经介绍，<em>Hazelcast</em>以分布式的方式实现了Java中的绝大部分数据结构，这些数据结构的数据都以分区表的方式存储，因此可以推断XML配置文件中的<em>&lt;map&gt;&lt;/map&gt;</em>元素就是用来配置分布式map的相关参数的，这里先不细说每个参数的定义，从字面上看，大概就是配置map的备份副本个数、释放策略、释放比率等等。有了<em>&lt;map&gt;&lt;/map&gt;</em>当然还有<em>&lt;queue&gt;&lt;/queue&gt;</em>、<em>&lt;set&gt;&lt;/set&gt;</em>、<em>&lt;list&gt;&lt;/list&gt;</em>等针对各种数据结构的配置元素。\n</p>\n<p><em>&lt;network&gt;&lt;/network&gt;</em>是非常重要的元素，他指定了<em>Hazelcast</em>的网络环境。上面这个简短的配置文件例子指定网络使用5700到5800端口，使用组播协议来进行组网。\n</p>\n<p>我们在创建<em>Hazelcast</em>集群时可以引入配置文件。下面的代码例子展示了如何引入自定义的配置文件。（<span\n        style="color:#000000"><em>文中所有例子的源码均在github</em></span>：<a title="github代码案例"\n                                                                   href="https://github.com/chkui/hazelcast-demo"\n                                                                   rel="nofollow">https://github.com/chkui/hazelcast-demo</a>。使用“<em>git\n    clone”到本地用maven就可以运行。</em>）</p>\n<pre class="cs"><code class="language-java"><span class="code-comment"><span class="code-comment">/** https://github.com/chkui/hazelcast-demo/blob/master/src/main/java/org/palm/hazelcast/config/HazelcastConfigSimple.java */</span></span>\n<span class="code-keyword"><span class="code-keyword">public</span></span> <span class="hljs-class"><span\n            class="code-keyword"><span class="code-keyword">class</span></span> <span class="code-title"><span\n            class="code-title">HazelcastConfigSimple</span></span> </span>{\n\t<span class="hljs-function"><span class="code-keyword"><span class="hljs-function"><span\n            class="code-keyword">public</span></span></span><span class="hljs-function"> </span><span\n            class="code-keyword"><span class="hljs-function"><span class="code-keyword">static</span></span></span><span\n            class="hljs-function"> </span><span class="code-keyword"><span class="hljs-function"><span\n            class="code-keyword">void</span></span></span><span class="hljs-function"> </span><span\n            class="code-title"><span class="hljs-function"><span class="code-title">main</span></span></span><span\n            class="hljs-params"><span class="hljs-function">(<span\n            class="hljs-params">String[] args</span>)</span></span><span class="hljs-function"> </span></span>{\n\t\t<span class="code-comment"><span class="code-comment">// 从classpath加载配置文件</span></span>\n\t\tConfig config = <span class="code-keyword"><span class="code-keyword">new</span></span> ClasspathXmlConfig(<span\n            class="code-string"><span class="code-string">"xmlconfig/simple-config.xml"</span></span>);\n\t\t<span class="code-comment"><span class="code-comment">// 获取网络配置</span></span>\n\t\tNetworkConfig netConfig = config.getNetworkConfig();\n\t\t<span class="code-comment"><span class="code-comment">// 获取用户定义的map配置</span></span>\n\t\tMapConfig mapConfigXml = config.getMapConfig(<span class="code-string"><span\n            class="code-string">"demo.config"</span></span>);\n\t\t<span class="code-comment"><span class="code-comment">// 获取系统默认的map配置</span></span>\n\t\tMapConfig mapConfigDefault = config.getMapConfig(<span class="code-string"><span\n            class="code-string">"default"</span></span>);\n\t\t<span class="code-comment"><span class="code-comment">// 输出集群监听的起始端口号</span></span>\n\t\tSystem.<span class="code-keyword">out</span>.println(<span class="code-string"><span class="code-string">"Current port:"</span></span> + netConfig.getPort());\n\t\t<span class="code-comment"><span class="code-comment">// 输出监听端口的累加号</span></span>\n\t\tSystem.<span class="code-keyword">out</span>.println(<span class="code-string"><span class="code-string">"Current port count:"</span></span> + netConfig.getPortCount());\n\t\t<span class="code-comment"><span class="code-comment">// 输出自定义map的备份副本个数</span></span>\n\t\tSystem.<span class="code-keyword">out</span>.println(<span class="code-string"><span class="code-string">"Config map backup count:"</span></span> + mapConfigXml.getBackupCount());\n\t\t<span class="code-comment"><span class="code-comment">// 输出默认map的备份副本个数</span></span>\n\t\tSystem.<span class="code-keyword">out</span>.println(<span class="code-string"><span class="code-string">"Default map backup count:"</span></span> + mapConfigDefault.getBackupCount());\n\n\t\t<span class="code-comment"><span class="code-comment">// 测试创建Hazelcast实例并读写测试数据</span></span>\n\t\tHazelcastInstance instance1 = Hazelcast.newHazelcastInstance(config);\n\t\tHazelcastInstance instance2 = Hazelcast.newHazelcastInstance(config);\n\n\t\tMap&lt;Integer, String&gt; defaultMap1 = instance1.getMap(<span class="code-string"><span class="code-string">"defaultMap"</span></span>);\n\t\tdefaultMap1.put(<span class="hljs-number"><span class="hljs-number">1</span></span>, <span\n            class="code-string"><span class="code-string">"testMap"</span></span>);\n\t\tMap&lt;Integer, String&gt; configMap1 = instance1.getMap(<span class="code-string"><span class="code-string">"configMap"</span></span>);\n\t\tconfigMap1.put(<span class="hljs-number"><span class="hljs-number">1</span></span>, <span\n            class="code-string"><span class="code-string">"configMap"</span></span>);\n\n\t\tMap&lt;Integer, String&gt; testMap2 = instance2.getMap(<span class="code-string"><span class="code-string">"defaultMap"</span></span>);\n\t\tSystem.<span class="code-keyword">out</span>.println(<span class="code-string"><span class="code-string">"Default map value:"</span></span> + testMap2.<span\n            class="code-keyword">get</span>(<span class="hljs-number"><span class="hljs-number">1</span></span>));\n\t\tMap&lt;Integer, String&gt; configMap2 = instance2.getMap(<span class="code-string"><span class="code-string">"configMap"</span></span>);\n\t\tSystem.<span class="code-keyword">out</span>.println(<span class="code-string"><span class="code-string">"Config map value:"</span></span> + configMap2.<span\n            class="code-keyword">get</span>(<span class="hljs-number"><span class="hljs-number">1</span></span>));\n\t}\n}</code></pre>\n<p>\n    上面的例子使用<em>ClasspathXmlConfig</em>来生成<em>Config</em>实例，它表示从classpath路径来加载配置文件。&nbsp;从上面的代码例子还可以看出，我们能够从<em>Config</em>实例中读取各种各样的配置信息，例如网络配置、Map配置等等。既然能get，当然也可以set，在<em>Hazelcast</em>没有初始化之前，都可以随意设置各种配置属性。下面的例子展示了如何在代码中修改Hazelcast的配置参数。\n</p>\n<pre class="cs"><code class="language-java"><span class="code-comment"><span class="code-comment">/** https://github.com/chkui/hazelcast-demo/blob/master/src/main/java/org/palm/hazelcast/config/HazelcastConfigRuntimeModify.java */</span></span>\n<span class="code-keyword"><span class="code-keyword">public</span></span> <span class="hljs-class"><span\n            class="code-keyword"><span class="code-keyword">class</span></span> <span class="code-title"><span\n            class="code-title">HazelcastConfigRuntimeModify</span></span> </span>{\n\t<span class="hljs-function"><span class="code-keyword"><span class="hljs-function"><span\n            class="code-keyword">public</span></span></span><span class="hljs-function"> </span><span\n            class="code-keyword"><span class="hljs-function"><span class="code-keyword">static</span></span></span><span\n            class="hljs-function"> </span><span class="code-keyword"><span class="hljs-function"><span\n            class="code-keyword">void</span></span></span><span class="hljs-function"> </span><span\n            class="code-title"><span class="hljs-function"><span class="code-title">main</span></span></span><span\n            class="hljs-params"><span class="hljs-function">(<span\n            class="hljs-params">String[] args</span>)</span></span><span class="hljs-function"> </span></span>{\n\t\t<span class="code-comment"><span class="code-comment">// 创建默认config对象</span></span>\n\t\tConfig config = <span class="code-keyword"><span class="code-keyword">new</span></span> Config();\n\t\t\n\t\t<span class="code-comment"><span\n                class="code-comment">// 获取network元素&lt;network&gt;&lt;/network&gt;</span></span>\n\t\tNetworkConfig netConfig = config.getNetworkConfig();\n\t\tSystem.<span class="code-keyword">out</span>.println(<span class="code-string"><span class="code-string">"Default port:"</span></span> + netConfig.getPort());\n\t\t\n\t\t<span class="code-comment"><span class="code-comment">// 设置组网起始监听端口</span></span>\n\t\tnetConfig.setPort(<span class="hljs-number"><span class="hljs-number">9701</span></span>);\n\t\tSystem.<span class="code-keyword">out</span>.println(<span class="code-string"><span class="code-string">"Customer port:"</span></span> + netConfig.getPort());\n\t\t<span class="code-comment"><span class="code-comment">// 获取join元素&lt;join&gt;&lt;/join&gt;</span></span>\n\t\tJoinConfig joinConfig = netConfig.getJoin();\n\t\t<span class="code-comment"><span class="code-comment">// 获取multicast元素&lt;multicast&gt;&lt;/multicast&gt;</span></span>\n\t\tMulticastConfig multicastConfig = joinConfig.getMulticastConfig();\n\t\t<span class="code-comment"><span class="code-comment">// 输出组播协议端口</span></span>\n\t\tSystem.<span class="code-keyword">out</span>.println(multicastConfig.getMulticastPort());\n\t\t<span class="code-comment"><span class="code-comment">// 禁用multicast协议</span></span>\n\t\tmulticastConfig.setEnabled(<span class="code-keyword"><span class="hljs-literal">false</span></span>);\n\t\t\n\t\t<span class="code-comment"><span class="code-comment">// 初始化Hazelcast</span></span>\n\t\tHazelcast.newHazelcastInstance(config);\n\t}\n}</code></pre>\n<p>上面的例子中，我们首先从<em>Config</em>中获取了<em>NetworkConfig</em>实例，然后调用<em>NetworkConfig::setPort</em>方法将集群的监听起始端口设置为9701（默认为5701）。运行以上代码会输出以下片段内容：\n</p>\n<blockquote>\n    <p>class:com.hazelcast.instance.DefaultAddressPicker<br> info: [LOCAL] [dev] [3.6.3] Picked\n        Address[192.168.1.100]:<span style="color:#FF0000">9701</span>, using socket\n        ServerSocket[addr=/0:0:0:0:0:0:0:0,localport=9701], bind any local is true</p>\n</blockquote>\n\n<h2 id="h2-2">XML配置与源码配置&nbsp; &nbsp;&nbsp;</h2>\n<p>看到这兄弟可能要问了：“又是XML配置，又是代码级配置的，他两到底啥关系呢？”。其实他两是相辅相成的，既可以只用XML配置、也可以只在代码中进行配置、还可以两者混合使用——先加载XML配置再对其进行修改以满足各种需要。</p>\n\n<h3 id="h3-1">一个简单的例子</h3>\n<p>我们先看一个简单的例子，再深入了解<em>Hazelcast</em>实现XML到<em>Java</em>对象映射的原理。</p>\n<pre class="xml"><code class="language-xml"><span class="code-comment"><span\n        class="code-comment">&lt;!-- XML配置 --&gt;</span></span>\n<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n        class="code-name">hazelcast</span></span></span><span class="code-tag">&gt;</span></span>\n\t<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">network</span></span></span><span class="code-tag">&gt;</span></span>\n\t\t<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">join</span></span></span><span class="code-tag">&gt;</span></span>\n\t\t\t<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span\n                    class="code-tag"><span class="code-name">multicast</span></span></span><span\n                    class="code-tag"> </span><span class="hljs-attr"><span class="code-tag"><span class="hljs-attr">enabled</span></span></span><span\n                    class="code-tag">=</span><span class="code-string"><span class="code-tag"><span class="code-string">"true"</span></span></span><span\n                    class="code-tag">&gt;</span></span>\n\t\t\t\t<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                        class="code-name">multicast-group</span></span></span><span class="code-tag">&gt;</span></span>224.2.2.3<span\n            class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">multicast-group</span></span></span><span class="code-tag">&gt;</span></span>\n\t\t\t\t<span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                        class="code-name">multicast-port</span></span></span><span class="code-tag">&gt;</span></span>54327<span\n            class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">multicast-port</span></span></span><span class="code-tag">&gt;</span></span>\n\t\t\t<span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span\n                    class="code-tag"><span class="code-name">multicast</span></span></span><span\n                    class="code-tag">&gt;</span></span>\n\t\t<span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">join</span></span></span><span class="code-tag">&gt;</span></span>\n\t<span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">network</span></span></span><span class="code-tag">&gt;</span></span>\n<span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n        class="code-name">hazelcast</span></span></span><span class="code-tag">&gt;</span></span></code></pre>\n<pre class="cpp"><code class="language-java"><span class="code-comment"><span\n        class="code-comment">// 代码读取数据</span></span>\nConfig config = <span class="code-keyword"><span class="code-keyword">new</span></span> Config();\nNetworkConfig networkConfig = config.getNetworkConfig();\nJoinConfig joinConfig = networkConfig .getJoin();\nMulticastConfig multicastConfig = joinConfig.getMulticastConfig();\n<span class="code-keyword"><span class="code-keyword">int</span></span> multicastPort = multicastConfig.getMulticastPort();</code></pre>\n<p>在上面这个XML配置和代码的例子中，<em>&lt;hazelcast&gt;&lt;/hazelcast&gt;</em>对应<em>Java</em>中<em>Config</em>对象，而<em>&lt;hazelcast&gt;</em>中包含<em>&lt;network&gt;&lt;/network&gt;</em>，因此<em>Config::getNetwork</em>方法可以获取<em>NetworkConfig</em>对象的实例。继续往下，<em>&lt;network&gt;</em>中包含<em>&lt;join&gt;&lt;/join&gt;</em>，因此<em>NetworkConfig::getJoin</em>可以得到<em>JoinConfig</em>。因为<em>&lt;join&gt;</em>包含<em>&lt;multicast&gt;&lt;/multicast&gt;</em>，所以<em>JoinConfig::getMulticastConfig</em>可以得到<em>MulticastConfig</em>。\n</p>\n<p>看到这里应该都明白了吧：就是每个XML元素对应一个<em>Java</em>实体或数据，只要按照XML配置文件的树形关系来调用get或set，就可以在源码中获取和设置所有配置数据。</p>\n\n<h3 id="h3-2">XML和源码配置的映射关系</h3>\n<p><span style="color:#FF0000"><em>友情提示：如果仅仅是想了解如何使用Hazelcast，建议直接跳过这一段。对XML定义、DTD、XSD不了解的话看多了反而容易混乱。</em></span></p>\n<p>前文已经提到Hazelcast的配置文件已经预定义了所有要使用的 <span\n        style="color:#0000FF">参数</span>（对应<em>XML</em>的<em>Element</em>和<em>Attribuet</em>），定义文件是<em>hazelcast-&lt;version&gt;.jar</em>包中的<em>hazelcast-3.*.xsd</em>（目前是3.6版本）。<em>XSD</em>文件中所有&nbsp;<span\n        style="color:#0000CD">类型</span>（<em>XSD</em>：<em>Type</em>）不为 预定义类型（<em>xs:boolean</em>、<em>xs:unsignedInt</em>&nbsp;等）的\n    <span style="color:#0000CD">元素</span>（<em>XSD：Element</em>）映射到<em>Java</em>中都对应一个 <span\n            style="color:#0000CD">实体</span>（<em>Entity</em>或<em>Pojo</em>）。如果 <span style="color:#0000CD">元素</span> 中还包含\n    <span style="color:#0000CD">类型&nbsp;</span>不为预定义类型的 <span style="color:#0000CD">元素</span>，则对应到Java数据结构时&nbsp;<span\n            style="color:#0000CD">实体</span>&nbsp;中还包含另外一个 <span style="color:#0000CD">实体</span>。若XSD文件中定义的 元素类型&nbsp;为\n    预定义类型，则对应一个Java基本数据值（<em>int</em>、<em>String</em>等）。</p>\n<p>例如下面这些<em>XSD</em>文件片段：</p>\n<pre class="scala"><code class="language-xml"><span class="code-tag">&lt;<span class="code-name">xs:element</span> <span\n        class="hljs-attr">name</span>=<span class="code-string"><span class="code-string">"network"</span></span> <span\n        class="hljs-attr"><span class="hljs-class"><span class="code-keyword">type</span></span></span>=<span\n        class="code-string"><span class="code-string">"network"</span></span> <span\n        class="hljs-attr">minOccurs</span>=<span class="code-string"><span class="code-string">"0"</span></span> <span\n        class="hljs-attr">maxOccurs</span>=<span class="code-string"><span\n        class="code-string">"1"</span></span>/&gt;</span>\n\n<span class="code-tag">&lt;<span class="code-name">xs:element</span> <span class="hljs-attr">name</span>=<span\n        class="code-string"><span class="code-string">"join"</span></span> <span class="hljs-attr"><span\n        class="hljs-class"><span class="code-keyword">type</span></span></span>=<span class="code-string"><span\n        class="code-string">"join"</span></span> <span class="hljs-attr">minOccurs</span>=<span\n        class="code-string"><span class="code-string">"0"</span></span> <span class="hljs-attr">maxOccurs</span>=<span\n        class="code-string"><span class="code-string">"1"</span></span>/&gt;</span>\n\n<span class="code-tag">&lt;<span class="code-name">xs:element</span> <span class="hljs-attr">name</span>=<span\n        class="code-string"><span class="code-string">"multicast"</span></span> <span class="hljs-attr"><span\n        class="hljs-class"><span class="code-keyword">type</span></span></span>=<span class="code-string"><span\n        class="code-string">"multicast"</span></span> <span class="hljs-attr">minOccurs</span>=<span\n        class="code-string"><span class="code-string">"0"</span></span>/&gt;</span>\n\n<span class="code-tag">&lt;<span class="code-name">xs:element</span> <span class="hljs-attr">name</span>=<span\n        class="code-string"><span class="code-string">"multicast-port"</span></span> <span class="hljs-attr"><span\n        class="hljs-class"><span class="code-keyword">type</span></span></span>=<span class="code-string"><span\n        class="code-string">"xs:unsignedShort"</span></span> <span class="hljs-attr">minOccurs</span>=<span\n        class="code-string"><span class="code-string">"0"</span></span> <span class="hljs-attr">maxOccurs</span>=<span\n        class="code-string"><span class="code-string">"1"</span></span> <span class="hljs-attr"><span\n        class="code-keyword">default</span></span>=<span class="code-string"><span\n        class="code-string">"54327"</span></span>&gt;</span></code></pre>\n<p><em>&lt;network&gt;&lt;/network&gt;</em>元素在<em>xsd</em>文件中定义的类型为<em>network</em>，因此他是一个名为<em>NetworkConfig</em>的实体。XML文件中在<em>&lt;network&gt;</em>元素内还有一个<em>&lt;join&gt;&lt;/join&gt;</em>元素，<em>&lt;join&gt;</em>元素的type为join，因此调用<em>NetworkConfig::getJoin</em>方法可以得到一个<em>JoinConfig</em>实例。以此类推，<em>&lt;join&gt;</em>内的<em>&lt;multicast&gt;&lt;/multicast&gt;</em>元素也是一个名为<em>MulticastConfig</em>的实体，而<em>&lt;multicast&gt;</em>中的<em>&lt;multicast-port&gt;&lt;/multicast-port&gt;</em>对应一个<em>Java</em>的基本数据值——<em>int</em>，因为它在XSD中的类型为<em>xs:unsignedShort</em>。\n</p>\n<p>如果使用的XML配置文件中出现了XSD文件中没有定义的元素和属性，在解析过程中会抛出<em>meaningful异常。</em></p>\n\n<h2 id="h2-3">Hazelcast配置文件详解</h2>\n<p>前面通过几个例子介绍了<em>Hazelcast</em>如何配置，后面的篇幅将会逐一介绍<em>Hazelcast</em>所有配置细节及其参数定义。如果某位仁兄现在已经需要将<em>Hazelcast</em>引入到现在的项目中，建议您仔细阅读。&nbsp;\n    &nbsp;&nbsp;</p>\n\n<h3 id="h3-3">加载配置文件</h3>\n<p>当调用<em>Hazelcast.newHazelcastInstance()</em>或<em>Hazelcast.newHazelcastInstance(null)</em>时，<em>Hazelcast</em>会从指定的路径加载XML配置文件或者加载默认配置文件。执行过程如下。\n</p>\n<p>首先，可以通过系统配置参数（system property）指定XML配置文件的加载路径。<em>Hazelcast</em>将在创建实例时检查是否设置了"<em><code>hazelcast.config</code></em>"这个启动参数并引用。可以通过Jvm\n    参数或 System参数来指定它：</p>\n<pre class="bash"><code class="language-bash"><span class="code-meta"><span class="code-meta">#!/bin/sh</span></span>\njava&nbsp;-Dhazelcast.config=/user/my_hazelcast_config.xml ....</code></pre>\n<p>或</p>\n<pre class="less"><code class="language-java"><span class="code-comment"><span\n        class="code-comment">// Java</span></span>\nSystem<span class="code-selector-class">.setProperty</span>( <span class="code-string"><span class="code-string">"hazelcast.config"</span></span>, <span\n            class="code-string"><span class="code-string">"/user/my_hazelcast_config.xml"</span></span> );</code></pre>\n<p>其次，如果没有设置这个参数或者指定路径的文件不存在，<em>Hazelcast</em>会搜寻当前classpath路径检查是否存在一个名为“<em>hazelcast.xml</em>”，有则使用。</p>\n<p>最后，如果通过以上2个步骤都没有加载到配置文件，则使用jar包中的“<em>hazelcast-default.xml</em>”。</p>\n\n<h3 id="h3-4">在编码中加载配置文件</h3>\n<p>除了上面指定系统参数的方法，还可以通过编码实现加载配置文件。<em>Hazelcast</em>提供了多种初始化配置文件的方法，主要有：<em>ClasspathXmlConfig</em>、<em>FileSystemXmlConfig</em>、<em>UrlXmlConfig</em>、<em>InMemoryXmlConfig</em>、<em>XmlConfigBuilder</em>。\n</p>\n<ol>\n    <li><strong><em>ClasspathXmlConfig</em></strong>：从classpath路径加载配置文件。通常情况下，除了<em>Java</em>的运行环境路径，classpath的根目录可以认为是classes文件夹。因此如果一个文件存放于<em>....../target/classes/xmlconfig/simple-config.xml</em>。那么<em>Config\n        cfg = new&nbsp;ClasspathXmlConfig("xmlconfig/simple-config.xml")</em>即可加载该配置文件。\n    </li>\n    <li><strong><em>FileSystemXmlConfig</em></strong>：从文件系统加载配置文件。文件系统是指从操作系统的文件路径加载文件，因此如果文件存放在&nbsp;<em>linux：/user/local/hazelcast/hazelcast.xml&nbsp;</em>或\n        <em>windows：D:\\local\\hazelcast\\hazelcast.xml</em>。那么使用<em>new&nbsp;FileSystemXmlConfig("/user/local/hazelcast/hazelcast.xml")&nbsp;</em>或<em>new&nbsp;FileSystemXmlConfig("D:\\\\local\\\\hazelcast\\\\hazelcast.xml")&nbsp;</em>即可获取配置文件。\n    </li>\n    <li><strong><em>UrlXmlConfig</em></strong>：从网络地址获取配置文件。</li>\n    <li><strong><em>InMemoryXmlConfig</em></strong>：从内存中的xml字符串生成配置文件。</li>\n    <li><strong><em>XmlConfigBuilder：</em></strong>从<em>InputStream</em>流中读取配置文件。使用<em>Config cfg = new\n        XmlConfigBuilder(inputStream).build()</em>可以创建一个<em>Config</em>实例。\n    </li>\n</ol>\n<p>得到<em>Config</em>实例之后使用<em>&nbsp;HazelcastInstance hazelcast = Hazelcast.newHazelcastInstance(config)</em>可以创建<em>HazelcastInstance</em>实例。\n</p>\n<p>在<em>Config</em>中使用<em>Config::setInstanceName</em>方法可以设置实例名称。此后使用这个名称可以获取同一个<em>HazelcastInstance </em>实例。例如：</p>\n<pre class="actionscript"><code class="language-java"><span class="code-comment"><span\n        class="code-comment">//Java</span></span>\n<span class="code-comment"><span class="code-comment">// 创建配置</span></span>\nConfig cfg = <span class="code-keyword"><span class="code-keyword">new</span></span> XmlConfigBuilder(inputStream).build();\n<span class="code-comment"><span class="code-comment">// 设置实例名称</span></span>\nconfig.setInstanceName(<span class="code-string"><span class="code-string">"my-instance"</span></span>);\n<span class="code-comment"><span class="code-comment">// 创建Hazelcast实例</span></span>\nHazelcast.newHazelcastInstance(cfg);\n<span class="code-comment"><span class="code-comment">// 获取已创建的实例</span></span>\nHazelcast.getHazelcastInstanceByName(<span class="code-string"><span\n            class="code-string">"my-instance"</span></span>);</code></pre>\n\n<h3 id="h3-5">在配置文件中使用通配符</h3>\n<p>在XML配置文件中，可以使用通配符*来匹配某些元素的名称。例如像下面这样配置一个分布式<em>Map</em>的名称：</p>\n<pre class="cpp"><code class="language-xml"><span class="code-tag">&lt;<span class="code-name"><span\n        class="code-built_in">map</span></span> <span class="hljs-attr">name</span>=<span class="code-string"><span\n        class="code-string">"map.*"</span></span>&gt;</span>\n...\n<span class="code-tag">&lt;/<span class="code-name"><span\n        class="code-built_in">map</span></span>&gt;</span></code></pre>\n<p>在使用时,下面的方法都是获得同一个<em>Map</em>。</p>\n<pre class="nginx"><code class="language-java"><span\n        class="code-attribute">Map</span> map1 = hazelcastInstance.getMap(<span class="code-string"><span\n        class="code-string">"map.1"</span></span>);\n\n<span class="code-attribute">Map</span> map2 = hazelcastInstance.getMap(<span class="code-string"><span\n            class="code-string">"map.2"</span></span>);\n\n<span class="code-attribute">Map</span> map3 = hazelcastInstance.getMap(<span class="code-string"><span\n            class="code-string">"map.3"</span></span>);</code></pre>\n\n<h3 id="h3-6">在配置文件中使用变量</h3>\n<p><em>Hazelcast</em>提供了使用变量来配置XML中元素值的方法，通过在配置文件中使用${}来指定变量要替换的参数。</p>\n<p>首先，<strong>可以通过系统参数来设置Hazelcast参数</strong>。例如像下面这样设置变量：</p>\n<pre class="haml"><code class="language-bash">-<span class="ruby">Dgroup.name=dev \n</span>-<span class="ruby">Dgroup.password=somepassword</span></code></pre>\n<p>或</p>\n<pre class="less"><code class="language-java">System<span class="code-selector-class">.setProperty</span>( <span\n        class="code-string"><span class="code-string">"group.name"</span></span>, <span class="code-string"><span\n        class="code-string">"demo"</span></span> );\nSystem<span class="code-selector-class">.setProperty</span>( <span class="code-string"><span class="code-string">"group.password"</span></span>, <span\n            class="code-string"><span class="code-string">"passwd"</span></span> );</code></pre>\n<p>可以在XML配置文件中可以像下面这样设置${}：</p>\n<pre class="dust"><code class="language-xml"><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">hazelcast</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n  </span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span class="code-name"><span\n        class="xml"><span class="code-tag"><span class="code-name">group</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span><span class="xml">\n    </span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">name</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">$</span><span class="code-template-variable">{group.name}</span><span\n        class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span class="code-name"><span\n        class="xml"><span class="code-tag"><span class="code-name">name</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span><span class="xml">\n    </span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span class="code-name">password</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span><span class="xml">$</span><span\n        class="code-template-variable">{group.password}</span><span class="code-tag"><span class="xml"><span\n        class="code-tag">&lt;/</span></span><span class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">password</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n  </span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">group</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span class="code-name"><span\n        class="xml"><span class="code-tag"><span class="code-name">hazelcast</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span></code></pre>\n<p>在创建配置文件时，${}会被变量替换。</p>\n<p>其次，<strong>可以通过XML中的<em>&lt;properties&gt;&lt;/properties&gt;</em>元素配置参数</strong>。如下：</p>\n<pre class="dust"><code class="language-xml"><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">hazelcast</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">properties</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n\t\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span class="code-name">property</span></span></span></span><span\n        class="xml"><span class="code-tag"> </span></span><span class="hljs-attr"><span class="xml"><span\n        class="code-tag"><span class="hljs-attr">name</span></span></span></span><span class="xml"><span\n        class="code-tag">=</span></span><span class="code-string"><span class="xml"><span class="code-tag"><span\n        class="code-string">"group.name"</span></span></span></span><span class="xml"><span class="code-tag">&gt;</span></span></span><span\n        class="xml">dev</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span class="code-name">property</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span><span class="xml">\n\t\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span class="code-name">property</span></span></span></span><span\n        class="xml"><span class="code-tag"> </span></span><span class="hljs-attr"><span class="xml"><span\n        class="code-tag"><span class="hljs-attr">name</span></span></span></span><span class="xml"><span\n        class="code-tag">=</span></span><span class="code-string"><span class="xml"><span class="code-tag"><span\n        class="code-string">"group.passwd"</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">devpasswd</span><span class="code-tag"><span\n        class="xml"><span class="code-tag">&lt;/</span></span><span class="code-name"><span class="xml"><span\n        class="code-tag"><span class="code-name">property</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">properties</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n    </span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">group</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n\t\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">name</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">$</span><span class="code-template-variable">{group.name}</span><span\n        class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span class="code-name"><span\n        class="xml"><span class="code-tag"><span class="code-name">name</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span><span class="xml">\n\t\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span class="code-name">password</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span><span class="xml">$</span><span\n        class="code-template-variable">{group.passwd}</span><span class="code-tag"><span class="xml"><span\n        class="code-tag">&lt;/</span></span><span class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">password</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">group</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span class="code-name"><span\n        class="xml"><span class="code-tag"><span class="code-name">hazelcast</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span></code></pre>\n<p>引入配置文件后，会将properties中的变量替换到对应的${}中。</p>\n<p>最后，<strong>还可以通过标准的<em>properties</em>文件来配置参数</strong>。如下面示例代码：</p>\n<pre class="actionscript"><code class="language-java"><span class="code-comment"><span class="code-comment">/** https://github.com/chkui/hazelcast-demo/blob/master/src/main/java/org/palm/hazelcast/config/HazelcastConfigVariable.java */</span></span>\n<span class="code-keyword"><span class="code-keyword">public</span></span> <span class="hljs-class"><span\n            class="code-keyword"><span class="hljs-class"><span class="code-keyword">class</span></span></span><span\n            class="hljs-class"> </span><span class="code-title"><span class="hljs-class"><span class="code-title">HazelcastConfigVariable</span></span></span><span\n            class="hljs-class"> </span></span>{\n\t<span class="code-comment"><span class="code-comment">// XML配置文件存放路径</span></span>\n\t<span class="code-keyword"><span class="code-keyword">final</span></span> <span class="code-keyword"><span\n            class="code-keyword">static</span></span> String DEF_CONFIG_FILE = <span class="code-string"><span\n            class="code-string">"xmlconfig/variable-config.xml"</span></span>;\n\t<span class="code-comment"><span class="code-comment">// properties文件路径</span></span>\n\t<span class="code-keyword"><span class="code-keyword">final</span></span> <span class="code-keyword"><span\n            class="code-keyword">static</span></span> String DEF_PROPERTIES_FILE = <span class="code-string"><span\n            class="code-string">"properties/variable-config.properties"</span></span>;\n\t<span class="hljs-function"><span class="code-keyword"><span class="code-keyword">public</span></span> <span\n            class="code-keyword"><span class="code-keyword">static</span></span> <span class="code-keyword"><span\n            class="code-keyword">void</span></span> <span class="code-title">main</span><span class="hljs-params">(String[] args)</span> </span>{\n\t\t<span class="code-keyword"><span class="code-keyword">try</span></span> {\n\t\t\t<span class="code-comment"><span class="code-comment">// 获取配置文件磁盘路径</span></span>\n\t\t\t<span class="code-keyword"><span class="code-keyword">final</span></span> String path = Thread.currentThread().getContextClassLoader().getResource(<span\n            class="code-string"><span class="code-string">""</span></span>).toString() + DEF_CONFIG_FILE;\n\t\t\t<span class="code-comment"><span class="code-comment">// 构建XML配置</span></span>\n\t\t\tXmlConfigBuilder builder = <span class="code-keyword"><span class="code-keyword">new</span></span> XmlConfigBuilder(path);\n\t\t\t<span class="code-comment"><span class="code-comment">// 设置properties</span></span>\n\t\t\tbuilder.setProperties(getProperties());\n\t\t\t<span class="code-comment"><span class="code-comment">// 创建Config，此时会替换${}</span></span>\n\t\t\tConfig config = builder.build();\n\t\t\t<span class="code-comment"><span class="code-comment">// 输出Config参数</span></span>\n\t\t\tSystem.out.println(config.getGroupConfig().getName());\n\t\t} <span class="code-keyword"><span class="code-keyword">catch</span></span> (FileNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\t<span class="code-comment"><span class="code-comment">// get Properties</span></span>\n\t<span class="hljs-function"><span class="code-keyword"><span class="code-keyword">private</span></span> <span\n            class="code-keyword"><span class="code-keyword">static</span></span> Properties <span class="code-title">getProperties</span><span\n            class="hljs-params">()</span> </span>{\n\t\tProperties p = <span class="code-keyword"><span class="hljs-literal">null</span></span>;\n\t\t<span class="code-keyword"><span class="code-keyword">try</span></span> (InputStream <span class="code-keyword">in</span> = Thread.currentThread().getContextClassLoader().getResourceAsStream(DEF_PROPERTIES_FILE)) {\n\t\t\t<span class="code-keyword"><span class="code-keyword">if</span></span> (<span class="code-keyword"><span\n            class="hljs-literal">null</span></span> != <span class="code-keyword">in</span>) {\n\t\t\t\tp = <span class="code-keyword"><span class="code-keyword">new</span></span> Properties();\n\t\t\t\tp.load(<span class="code-keyword">in</span>);\n\t\t\t}\n\t\t} <span class="code-keyword"><span class="code-keyword">catch</span></span> (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(<span class="hljs-number"><span class="hljs-number">0</span></span>);\n\t\t}\n\t\t<span class="code-keyword"><span class="code-keyword">return</span></span> p;\n\t}\n}</code></pre>\n<p>代码对应的XML配置文件：</p>\n<pre class="dust"><code class="language-xml"><span class="code-comment"><span class="xml"><span class="code-comment">&lt;!-- https://github.com/chkui/hazelcast-demo/blob/master/src/main/resources/xmlconfig/variable-config.xml --&gt;</span></span></span><span\n        class="xml">\n</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span class="code-name"><span\n        class="xml"><span class="code-tag"><span class="code-name">hazelcast</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span><span class="xml">\n\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">group</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n\t\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">name</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">$</span><span class="code-template-variable">{group.name}</span><span\n        class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span class="code-name"><span\n        class="xml"><span class="code-tag"><span class="code-name">name</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span><span class="xml">\n\t\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span class="code-name">password</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span><span class="xml">$</span><span\n        class="code-template-variable">{group.password}</span><span class="code-tag"><span class="xml"><span\n        class="code-tag">&lt;/</span></span><span class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">password</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">group</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span class="code-name">network</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span><span class="xml">\n\t\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">port</span></span></span></span><span class="xml"><span class="code-tag"> </span></span><span\n        class="hljs-attr"><span class="xml"><span class="code-tag"><span class="hljs-attr">auto-increment</span></span></span></span><span\n        class="xml"><span class="code-tag">=</span></span><span class="code-string"><span class="xml"><span\n        class="code-tag"><span class="code-string">"true"</span></span></span></span><span class="xml"><span\n        class="code-tag"> </span></span><span class="hljs-attr"><span class="xml"><span class="code-tag"><span\n        class="hljs-attr">port-count</span></span></span></span><span class="xml"><span class="code-tag">=</span></span><span\n        class="code-string"><span class="xml"><span class="code-tag"><span\n        class="code-string">"100"</span></span></span></span><span class="xml"><span class="code-tag">&gt;</span></span></span><span\n        class="xml">5701</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">port</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n\t\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">join</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n\t\t\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">multicast</span></span></span></span><span class="xml"><span\n        class="code-tag"> </span></span><span class="hljs-attr"><span class="xml"><span class="code-tag"><span\n        class="hljs-attr">enabled</span></span></span></span><span class="xml"><span\n        class="code-tag">=</span></span><span class="code-string"><span class="xml"><span class="code-tag"><span\n        class="code-string">"true"</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n\t\t\t\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span class="code-name">multicast-group</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span><span class="xml">224.2.2.3</span><span\n        class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span class="code-name"><span\n        class="xml"><span class="code-tag"><span class="code-name">multicast-group</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span><span class="xml">\n\t\t\t\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span class="code-name">multicast-port</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span><span class="xml">54327</span><span\n        class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span class="code-name"><span\n        class="xml"><span class="code-tag"><span class="code-name">multicast-port</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span><span class="xml">\n\t\t\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">multicast</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n\t\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">join</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n\t</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span class="code-name">network</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span><span class="xml">\n</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span class="code-name"><span\n        class="xml"><span class="code-tag"><span class="code-name">hazelcast</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span></code></pre>\n<p>对应properties文件：</p>\n<pre class="gradle"><code class="gradle">#https:<span class="code-comment"><span class="code-comment">//github.com/chkui/hazelcast-demo/blob/master/src/main/resources/properties/variable-config.properties</span></span>\n\n<span class="code-keyword"><span class="code-keyword">group</span></span>.name=demo\n<span class="code-keyword"><span class="code-keyword">group</span></span>.password=demopasswd</code></pre>\n<p>上面的代码先创建了一个<em>XmlConfigBuilder</em>实例，然后调用<em>XmlConfigBuilder::setProperties</em>方法设置<em>Properties</em>到&nbsp;<em>XmlConfigBuilder</em>中。在build时，会用Properties定义的变量替换XML中对应的${}参数。通过使用properties来控制配置参数，我们可以使用更多的工具来管理<em>Hazelcast</em>配置，例如使用<em>Maven</em>的<em>&lt;resources&gt;</em>元素管理properties。\n</p>\n\n<h3 id="h3-7">结构化配置</h3>\n<p>和spring的配置文件一样，<em>Hazelcast</em>的XML配置文件也可以通过<em>&lt;import&gt;</em>元素来整合多个配置文件。例如有下面2份配置文件。</p>\n<p><em>group-config.xml</em>&nbsp;：</p>\n<pre class="xml"><code class="language-xml"><span class="code-tag"><span class="code-tag">&lt;</span><span\n        class="code-name"><span class="code-tag"><span class="code-name">hazelcast</span></span></span><span\n        class="code-tag">&gt;</span></span>\n  <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n          class="code-name">group</span></span></span><span class="code-tag">&gt;</span></span>\n      <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n              class="code-name">name</span></span></span><span class="code-tag">&gt;</span></span>dev<span\n            class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">name</span></span></span><span class="code-tag">&gt;</span></span>\n      <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n              class="code-name">password</span></span></span><span class="code-tag">&gt;</span></span>dev-pass<span\n            class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">password</span></span></span><span class="code-tag">&gt;</span></span>\n  <span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n          class="code-name">group</span></span></span><span class="code-tag">&gt;</span></span>\n<span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n        class="code-name">hazelcast</span></span></span><span class="code-tag">&gt;</span></span></code></pre>\n<p><em>network-config.xml</em>：</p>\n<pre class="xml"><code class="language-xml"><span class="code-tag"><span class="code-tag">&lt;</span><span\n        class="code-name"><span class="code-tag"><span class="code-name">hazelcast</span></span></span><span\n        class="code-tag">&gt;</span></span>\n  <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n          class="code-name">network</span></span></span><span class="code-tag">&gt;</span></span>\n    <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">port</span></span></span><span class="code-tag"> </span><span class="hljs-attr"><span\n            class="code-tag"><span class="hljs-attr">auto-increment</span></span></span><span\n            class="code-tag">=</span><span class="code-string"><span class="code-tag"><span\n            class="code-string">"true"</span></span></span><span class="code-tag"> </span><span class="hljs-attr"><span\n            class="code-tag"><span class="hljs-attr">port-count</span></span></span><span class="code-tag">=</span><span\n            class="code-string"><span class="code-tag"><span class="code-string">"100"</span></span></span><span\n            class="code-tag">&gt;</span></span>5701<span class="code-tag"><span class="code-tag">&lt;/</span><span\n            class="code-name"><span class="code-tag"><span class="code-name">port</span></span></span><span\n            class="code-tag">&gt;</span></span>\n    <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">join</span></span></span><span class="code-tag">&gt;</span></span>\n        <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">multicast</span></span></span><span class="code-tag"> </span><span\n                class="hljs-attr"><span class="code-tag"><span class="hljs-attr">enabled</span></span></span><span\n                class="code-tag">=</span><span class="code-string"><span class="code-tag"><span class="code-string">"true"</span></span></span><span\n                class="code-tag">&gt;</span></span>\n            <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span\n                    class="code-tag"><span class="code-name">multicast-group</span></span></span><span class="code-tag">&gt;</span></span>224.2.2.3<span\n            class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">multicast-group</span></span></span><span class="code-tag">&gt;</span></span>\n            <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span\n                    class="code-tag"><span class="code-name">multicast-port</span></span></span><span class="code-tag">&gt;</span></span>54327<span\n            class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">multicast-port</span></span></span><span class="code-tag">&gt;</span></span>\n        <span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n                class="code-name">multicast</span></span></span><span class="code-tag">&gt;</span></span>\n    <span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n            class="code-name">join</span></span></span><span class="code-tag">&gt;</span></span>\n  <span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n          class="code-name">network</span></span></span><span class="code-tag">&gt;</span></span>\n<span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n        class="code-name">hazelcast</span></span></span><span class="code-tag">&gt;</span></span></code></pre>\n<p>然后我们可以像下面这样把2份配置整合在一起。</p>\n<pre class="xml"><code class="language-xml"><span class="code-tag"><span class="code-tag">&lt;</span><span\n        class="code-name"><span class="code-tag"><span class="code-name">hazelcast</span></span></span><span\n        class="code-tag">&gt;</span></span>\n  <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n          class="code-name">import</span></span></span><span class="code-tag"> </span><span class="hljs-attr"><span\n          class="code-tag"><span class="hljs-attr">resource</span></span></span><span class="code-tag">=</span><span\n          class="code-string"><span class="code-tag"><span\n          class="code-string">"group-config.xml"</span></span></span><span class="code-tag">/&gt;</span></span>\n  <span class="code-tag"><span class="code-tag">&lt;</span><span class="code-name"><span class="code-tag"><span\n          class="code-name">import</span></span></span><span class="code-tag"> </span><span class="hljs-attr"><span\n          class="code-tag"><span class="hljs-attr">resource</span></span></span><span class="code-tag">=</span><span\n          class="code-string"><span class="code-tag"><span class="code-string">"network-config.xml"</span></span></span><span\n          class="code-tag">/&gt;</span></span>\n<span class="code-tag"><span class="code-tag">&lt;/</span><span class="code-name"><span class="code-tag"><span\n        class="code-name">hazelcast</span></span></span><span class="code-tag">&gt;</span></span></code></pre>\n<p><em>&lt;import&gt;</em>元素同样支持参数：</p>\n<pre class="dust"><code class="language-xml"><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span\n        class="code-name"><span class="xml"><span class="code-tag"><span\n        class="code-name">hazelcast</span></span></span></span><span class="xml"><span\n        class="code-tag">&gt;</span></span></span><span class="xml">\n  </span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span class="code-name"><span\n        class="xml"><span class="code-tag"><span class="code-name">import</span></span></span></span><span\n        class="xml"><span class="code-tag"> </span></span><span class="hljs-attr"><span class="xml"><span\n        class="code-tag"><span class="hljs-attr">resource</span></span></span></span><span class="xml"><span\n        class="code-tag">=</span></span><span class="code-string"><span class="xml"><span class="code-tag"><span\n        class="code-string">"$</span></span></span><span class="code-template-variable">{param1}</span><span\n        class="xml"><span class="code-tag"><span class="code-string">-group-config.xml"</span></span></span></span><span\n        class="xml"><span class="code-tag">/&gt;</span></span></span><span class="xml">\n  </span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;</span></span><span class="code-name"><span\n        class="xml"><span class="code-tag"><span class="code-name">import</span></span></span></span><span\n        class="xml"><span class="code-tag"> </span></span><span class="hljs-attr"><span class="xml"><span\n        class="code-tag"><span class="hljs-attr">resource</span></span></span></span><span class="xml"><span\n        class="code-tag">=</span></span><span class="code-string"><span class="xml"><span class="code-tag"><span\n        class="code-string">"$</span></span></span><span class="code-template-variable">{param2}</span><span\n        class="xml"><span class="code-tag"><span\n        class="code-string">-network-config.xml"</span></span></span></span><span class="xml"><span class="code-tag">/&gt;</span></span></span><span\n        class="xml">\n</span><span class="code-tag"><span class="xml"><span class="code-tag">&lt;/</span></span><span class="code-name"><span\n        class="xml"><span class="code-tag"><span class="code-name">hazelcast</span></span></span></span><span\n        class="xml"><span class="code-tag">&gt;</span></span></span></code></pre>\n<p>有了结构化配置的方法，可以把一份大文档，划分成很多相关部分去维护。</p>\n<p>'}});